(()=>{const AI_ENDPOINT="https://ai.groundhogg.io";const BUTTON_TEXTS=["Corralling groundhogs","Checking for shadows","Reciting french poetry","Snoozing alarm clocks","Feeding Phil","Avoiding puddles","Delivering weather forecast","Predicting six more weeks of code","Consulting groundhogs","Learning jazz piano","Sculpting ice sculptures","Performing heimlich maneuvers","Changing flat tires","Throwing snowballs","Ordering flapjacks","Trying again"];const AiGeneratingText=index=>BUTTON_TEXTS[(index%BUTTON_TEXTS.length+BUTTON_TEXTS.length)%BUTTON_TEXTS.length];const pollAiResponse=job_id=>new Promise((res,rej)=>{let interval=setInterval(async()=>{let jobRes;try{jobRes=await fetch(AI_ENDPOINT+`?job_id=${job_id}`).then(res=>res.json())}catch(err){clearInterval(interval);rej(err)}if(jobRes.status==="done"){clearInterval(interval);res(jobRes.content)}if(jobRes.status==="error"){clearInterval(interval);rej(new Error(jobRes.error))}},5e3)});const aiRequest=async prompt=>{let jobRes=await fetch(AI_ENDPOINT,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({license_key:GroundhoggAi.license_key,prompt:prompt})}).then(res=>res.json());if(jobRes.error){throw new Error(jobRes.error)}let jobId=jobRes.job_id;let content=await pollAiResponse(jobId);return JSON.parse(content)};Groundhogg.ai={AiGeneratingText:AiGeneratingText,request:aiRequest,poll:async job_id=>{return JSON.parse(await pollAiResponse(job_id))}}})();