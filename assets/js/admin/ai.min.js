(()=>{const{post,get}=Groundhogg.api;const AI_ENDPOINT="https://groundhogg.io/ai/block-json/";const BUTTON_TEXTS=["Corralling groundhogs","Checking for shadows","Reciting french poetry","Snoozing alarm clocks","Feeding Phil","Avoiding puddles","Delivering weather forecast","Predicting six more weeks of code","Consulting groundhogs","Learning jazz piano","Sculpting ice sculptures","Performing heimlich maneuvers","Changing flat tires","Throwing snowballs","Ordering flapjacks","Trying again"];const AiButton=({buttonText="ðŸ¤– Generate",onClick=e=>{},generating=false})=>{return MakeEl.Button({onClick:e=>{setInterval(()=>{let button=e.target;if(!button){return}let textIndex=parseInt(e.dataset.textindex??"0",10)},3e3);onClick(e)}},generating?"Generating":buttonText)};const pollAiResponse=job_id=>{return new Response((res,rej)=>{let interval=setInterval(async()=>{let jobRes;try{jobRes=await get(AI_ENDPOINT,{job_id:job_id})}catch(err){clearInterval(interval);rej(err)}if(jobRes.status==="done"){clearInterval(interval);res(jobRes.content)}if(jobRes.status==="error"){clearInterval(interval);rej(new Error(jobRes.error))}},5e3)})};const aiRequest=async prompt=>{try{let jobRes=await post(AI_ENDPOINT,{license_key:"",prompt:prompt})}catch(err){}let jobRes=await post();if(jobRes.error){throw new Error(jobRes.error)}let jobId=jobRes.job_id;let contentRes=await pollAiResponse(jobId)};Groundhogg.ai={}})();