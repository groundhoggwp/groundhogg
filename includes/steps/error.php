<?php

namespace Groundhogg\Steps;

use Groundhogg\Step;
use function Groundhogg\array_find;

class Error extends Funnel_Step {

	public function get_name() {
		return __( 'Error' );
	}

	public function get_type() {
		return 'error';
	}

	public function get_group() {
		return '';
	}

	public function get_description() {
		return '';
	}

	public function get_icon() {
		return GROUNDHOGG_ASSETS_URL . 'images/funnel-icons/no-icon.png';
	}

	/**
	 * @param \Groundhogg\Contact $contact
	 * @param \Groundhogg\Event   $event
	 *
	 * @return bool|\WP_Error
	 */
	public function run( $contact, $event ) {
		return new \WP_Error( 'invalid_step_type', 'This step type is not registered.' );
	}

	public function before_step_warnings() {
		$this->add_error( 'error', __( 'No settings were found for this step type. This may be because you disabled an add-on which utilized this step type. You should either enable the addon that registers this step type, or delete this step from the funnel.', 'groundhogg' ) );
	}

	/**
	 * @param Step $step
	 */
	public function settings( $step ) {
	}

	/**
	 * @param Step $step
	 *
	 * @return bool
	 */
	public function save( $step ) {
	}

	public function sortable_item( $step ) {

		// todo cleaner way to do this?
		if ( $step->is_benchmark() ) {

			$steps = $step->get_funnel()->get_steps();

			$prev = array_find( $steps, function ( Step $maybePrev ) use ( $step ) {
				return $maybePrev->get_order() === $step->get_order() - 1 && $step->is_same_branch( $maybePrev );
			} );

			$next = array_find( $steps, function ( Step $maybePrev ) use ( $step ) {
				return $maybePrev->get_order() === $step->get_order() + 1 && $step->is_same_branch( $maybePrev );
			} );

			// if the previous step was not a benchmark, we should open the horizontal benchmark group
			if ( ! $prev || ! $prev->is_benchmark() ) {
				?>
                <div class="step-branch benchmarks" data-branch="<?php _e( $step->branch ) ?>">
				<?php
			} else {
				?><span class="benchmark-or">OR</span><?php
			}

			parent::sortable_item( $step );

			// if the next step is not a benchmark, close the benchmark group
			if ( ! $next || ! $next->is_benchmark() ) {
				?></div><?php
			}

			return;
		}

		// todo, is this necessary?
		if ( $step->is_logic() ) {

		}

		parent::sortable_item( $step ); // TODO: Change the autogenerated stub
	}
}
